{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "anudeep-data-factory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"GEN2_LINKED_SERVICE_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'GEN2_LINKED_SERVICE'"
		},
		"GEN2_LINKED_SERVICE_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://anudeepterraformstorage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GEN2_LINKED_SERVICE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('GEN2_LINKED_SERVICE_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('GEN2_LINKED_SERVICE_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OCCUPATIONS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GEN2_LINKED_SERVICE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "occupations.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "#",
						"type": "String"
					},
					{
						"name": "Occupation",
						"type": "String"
					},
					{
						"name": "Median wage (US)",
						"type": "String"
					},
					{
						"name": "Projected growth (by 2031)",
						"type": "String"
					},
					{
						"name": "Risk level",
						"type": "String"
					},
					{
						"name": "Risk level (voted)",
						"type": "String"
					},
					{
						"name": "Job score",
						"type": "String"
					},
					{
						"name": "Popularity(100 is most viewed)",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GEN2_LINKED_SERVICE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OCCUPATIONS_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GEN2_LINKED_SERVICE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GEN2_LINKED_SERVICE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRANSFORMED_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GEN2_LINKED_SERVICE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "transformed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GEN2_LINKED_SERVICE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "OCCUPATIONS_PARQUET",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TRANSFORMED_PARQUET",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Occupation as string,",
						"          Wage as string,",
						"          Growth as string,",
						"          Risk as string,",
						"          Risk_voted as string,",
						"          Score as string,",
						"          Popularity as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Score = substring(Score, 1, 3),",
						"          Wage = replace(Wage, ',', ''),",
						"          Growth = replace(Growth, '%', ''),",
						"          Risk = replace(Risk, '%', ''),",
						"          Risk_voted = replace(Risk_voted, '%', '')) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          Wage as integer,",
						"          Growth as decimal(10,2),",
						"          Risk as decimal(10,2),",
						"          Risk_voted as decimal(10,2),",
						"          Score as decimal(10,2)",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OCCUPATIONS_PARQUET')]",
				"[concat(variables('factoryId'), '/datasets/TRANSFORMED_PARQUET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ELT_JOBTREND_PIPELINE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01_CSV_TO_PARQUET",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Occupation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Occupation",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Median wage (US)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Wage",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Projected growth (by 2031)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Growth",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Risk level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Risk",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Risk level (voted)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Risk_voted",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Job score",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Score",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Popularity(100 is most viewed)",
											"type": "Int16",
											"physicalType": "String"
										},
										"sink": {
											"name": "Popularity",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OCCUPATIONS_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OCCUPATIONS_PARQUET",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TRANSFORMATIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "01_CSV_TO_PARQUET",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OCCUPATIONS_CSV')]",
				"[concat(variables('factoryId'), '/datasets/OCCUPATIONS_PARQUET')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}